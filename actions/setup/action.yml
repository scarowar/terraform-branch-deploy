name: üõ†Ô∏è Setup Environment
description: Sets up the environment and tools for terraform-branch-deploy operations, including dependency installation and configuration validation.

inputs:
  skip:
    description: When true, skips most setup steps (Python, tfcmt installation) but still validates configuration and extracts environment information.
    required: false
    default: "false"
  github-token:
    description: GitHub token for authentication. Required for tool installation and repository operations.
    required: true
  main-action-path:
    description: Path to the main action directory containing scripts and dependencies.
    required: false
    default: .

outputs:
  available_envs:
    description: Comma-separated list of available environment names discovered from .tf-branch-deploy.yml configuration.
    value: ${{ steps.preflight.outputs.available_envs }}
  default_environment:
    description: The default environment name as specified in .tf-branch-deploy.yml configuration.
    value: ${{ steps.preflight.outputs.default_environment }}
  production_environments:
    description: Comma-separated list of environment names marked as production in .tf-branch-deploy.yml configuration.
    value: ${{ steps.preflight.outputs.production_environments }}

runs:
  using: composite
  steps:
    - name: üì• Checkout User Repository at Target Commit
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ github.sha }}
        fetch-depth: 1
        path: user-repo

    - name: üîé Validate .tf-branch-deploy.yml against schema
      uses: GrantBirki/json-yaml-validate@250fa0dc7d7f4a888b24dc2a6b2ff589753fba70 # v3.3.2
      with:
        files: user-repo/.tf-branch-deploy.yml
        json_schema: ${{ inputs.main-action-path }}/tf-branch-deploy.schema.json
        yaml_as_json: true
        mode: fail
        comment: "true"

    - name: üîç Check for Node.js
      id: check_node
      shell: bash
      run: |
        if command -v node >/dev/null 2>&1; then
          echo "found=true" >> "$GITHUB_OUTPUT"
        else
          echo "found=false" >> "$GITHUB_OUTPUT"
        fi

    - name: üåê Setup Node.js Environment
      if: ${{ steps.check_node.outputs.found == 'false' }}
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: üîç Check for Python 3
      id: check_python
      shell: bash
      run: |
        if command -v python3 >/dev/null 2>&1; then
          echo "found=true" >> "$GITHUB_OUTPUT"
        else
          echo "found=false" >> "$GITHUB_OUTPUT"
        fi

    - name: üêç Setup Python Environment
      if: ${{ inputs.skip != 'true' && steps.check_python.outputs.found == 'false' }}
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: üõ†Ô∏è Setup Environment and Tools
      shell: bash
      run: |
        set -euo pipefail
        chmod +x ${{ inputs.main-action-path }}/scripts/setup-environment.sh
        SKIP_MODE="${{ inputs.skip }}" ${{ inputs.main-action-path }}/scripts/setup-environment.sh
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        RUNNER_OS: ${{ runner.os }}
        SELF_ACTION_PATH: ${{ inputs.main-action-path }}
        USER_REPO_PATH: ${{ github.workspace }}/user-repo
        GITHUB_WORKSPACE: ${{ github.workspace }}

    - name: üö¶ Pre-flight Checks
      id: preflight
      shell: bash
      run: |
        set -euo pipefail
        chmod +x ${{ inputs.main-action-path }}/scripts/pre-flight-checks.sh
        ${{ inputs.main-action-path }}/scripts/pre-flight-checks.sh
      env:
        USER_REPO_PATH: ${{ github.workspace }}/user-repo
